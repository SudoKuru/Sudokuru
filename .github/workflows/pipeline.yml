name: "Pipeline"

on:
  workflow_dispatch:
  push:
    branches: 
      - main
  pull_request:
    branches: 
      - main
      
concurrency: main_workflow

permissions:
  contents: read
  pages: write
  checks: write
  id-token: write
  pull-requests: write
    
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Install Node
      uses: actions/setup-node@v3
      with:
        node-version: 16.x
        
    - run: npm i --ignore-scripts
    - run: npm run test
    - name: Test Reporter
      uses: dorny/test-reporter@v1
      if: success() || failure()    
      with:
        name: JEST Tests            
        path: junit.xml    
        reporter: jest-junit

    - name: Coveralls
      uses: coverallsapp/github-action@v2

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    - uses: fingerprintjs/action-coverage-report-md@v1
      id: coverage
      with:
        textReportPath: './jest-coverage/coverage-final.txt'
        srcBasePath: ''
    
    - run: | 
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Code Coverage" >> $GITHUB_STEP_SUMMARY
        echo "${{ steps.coverage.outputs.markdownReport }}" >> $GITHUB_STEP_SUMMARY

    - uses: marocchino/sticky-pull-request-comment@v2
      if: ${{ contains(fromJSON('["pull_request"]'), github.event_name)}}
      with:
        message: ${{ steps.coverage.outputs.markdownReport }}

  build_and_publish:
    name: Publish Package
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          registry-url: 'https://registry.npmjs.org'

      - run: npm i --ignore-scripts
      - run: npm run build --ignore-scripts
      - run: npm publish --ignore-scripts
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_API_KEY }}

  deploy_documentation:
    name: Deploy Documentation
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - run: npm i --ignore-scripts
      - run: npm run update-docs

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: 'docs/'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
